name: Python application

on: [pull_request, workflow_dispatch]
permissions:
  checks: write

jobs:
  generate-jobs:
    runs-on: ubuntu-latest
    outputs:
      session: ${{ steps.set-matrix.outputs.session }}
    steps:
      - uses: actions/checkout@v3
      - uses: wntrblm/nox@main
      - id: set-matrix
        shell: bash
        run: echo session=$(nox --json -l | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT
  checks:
    name: Session ${{ matrix.session }}
    needs: [generate-jobs]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        session: ${{ fromJson(needs.generate-jobs.outputs.session) }}
    steps:
      - uses: actions/checkout@v4
      - name: Remove cached duckdb extensions
        run: rm -rf ~/.duckdb
      - uses: actions/checkout@v3
      - uses: wntrblm/nox@main
      - run: nox -s "${{ matrix.session }}"
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: results.xml
          comment_mode: off
          check_name:  "Test Results - ${{ join(matrix.*, ', ') }}"
      - uses: codecov/codecov-action@v5.4.0
        env:
          PYTHON: ${{matrix.python}}
          BLEEDING_EDGE: ${{matrix.bleeding_edge}}
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: PYTHON # ,BLEEDING_EDGE  # set from matrix
          fail_ci_if_error: true
          verbose: true

  build_backend:
    runs-on: ubuntu-latest

    env:
      FORCE_COLOR: 1

    steps:
      - uses: actions/checkout@v4
      - run: python -m pip install uv -U
      - run: uvx poetry build
      - run: uvx poetry check --strict
