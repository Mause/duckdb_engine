name: Python application

on: [pull_request, workflow_dispatch]
permissions:
  checks: write

jobs:
  generate-jobs:
    runs-on: ubuntu-latest
    outputs:
      session: ${{ steps.set-matrix.outputs.session }}
    steps:
    - uses: actions/checkout@v3
    - uses: wntrblm/nox@main
    - id: set-matrix
      shell: bash
      run: echo session=$(nox --json -l | jq -c '[.[].session]') | tee --append $GITHUB_OUTPUT

  build_backend:
    name: build_backend (${{ matrix.session }})
    runs-on: ubuntu-latest
    needs: [generate-jobs]

    env:
      FORCE_COLOR: 1

    strategy:
      fail-fast: false
      matrix:
        session: ${{ fromJson(needs.generate-jobs.outputs.session) }}

    steps:
      - uses: actions/checkout@v4
      - name: Remove cached duckdb extensions
        run: rm -rf ~/.duckdb
      - uses: fjwillemsen/setup-nox2@v3.0.0
      - run: python -m pip install github-action-utils uv -U
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - run: nox -s "${{ matrix.session }}"
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: results.xml
          comment_mode: off
          check_name:  "Test Results - ${{ matrix.session }}"
      # - uses: codecov/codecov-action@v4
      #   env:
      #     PYTHON: ${{matrix.python}}
      #     BLEEDING_EDGE: ${{matrix.bleeding_edge}}
      #   with:
      #     files: ./coverage.xml
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     env_vars: PYTHON,BLEEDING_EDGE  # set from matrix
      #     fail_ci_if_error: true
      #     verbose: true
